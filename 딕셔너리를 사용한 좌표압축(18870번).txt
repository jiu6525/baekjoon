# 딕셔너리 사용이유 : 딕셔너리 list.index(i)의 형태는 O(N)의 시간복잡도 딕셔너리 index[i]는 시간복잡도 O(1)로 시간단축가능
import sys
input = sys.stdin.readline
n = int(input())
a = list(map(int,input().split()))
a1 = sorted(list(set(a)))
dic = {a1[i] : i for i in range(len(a1))}  #a1[0] : 0 -> -10 : 0
for i in a:
    print(dic[i], end = ' ')

#a1의 인덱스 값을 dic(a1의 인덱스 값으로 정렬된 딕셔너리)에 보관하고 a의 값을 반복문을 통하여 dic[i]로 찾아주면 된다.

#다른풀이
n = int(input())
arr = list(map(int, input().split()))
box = sorted(list(set(arr)))
key = {}
a = -1
for i in box:
    a += 1
    key[i] = a
for i in range(n):
    arr[i] = key[arr[i]]
print(' '.join(map(str,arr)))

# 중복이 제거되고 정렬된 리스트 box의 값을 key라는  a 가 0부터 시작하는 딕셔너리에 저장
# ex) key[-10] = 0, key = {-10 : 0}
# 기존 입력 arr[]의 인덱스 값을 key[arr[]] 로 변경해줌

 
