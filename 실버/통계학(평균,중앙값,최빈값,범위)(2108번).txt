# 산술평균 : N개의 수들의 합을 N으로 나눈 값
# 중앙값 : N개의 수들을 증가하는 순서로 나열했을 경우 그 중앙에 위치하는 값
# 최빈값 : N개의 수들 중 가장 많이 나타나는 값
# 범위 : N개의 수들 중 최댓값과 최솟값의 차이
import sys
from collections import Counter
a = int(sys.stdin.readline())
n = []
for i in range(a):
    n.append(int(sys.stdin.readline()))
n.sort()
a1 = Counter(n).most_common()
#산술평균  
print(round(sum(n)/a))   
#중앙값                        
print(n[a // 2])
#최빈값                       
if len(a1)> 1:
    if a1[0][1] == a1[1][1]:
        print(a1[1][0])
    else:
        print(a1[0][0])
else:
    print(a1[0][0])
#범위
print(n[-1]-n[0])      

최빈값 구하는게 귀찮은 문제, 카운팅 메서드를 사용하여 정렬한 후, 최빈값이 여러개 있을경우를 if문으로 확인하여 출력   

#재풀이 할때는 딕셔너리 자료형을 이용하여 값을 출력하였다.

import sys
input = sys.stdin.readline
n = int(input())
l =[]
for i in range(n):
    l.append(int(input().rstrip('\n')))

#산술평균
print(round(sum(l)/n))
#중앙값
l.sort()
print(l[n//2])
#최빈값
l1 = {}
for i in l:
    if i in l1:
        l1[i] +=1
    else:
        l1[i] = 1
m = max(l1.values())
max_l = []
for key,value in l1.items():
    if value == m:
        max_l.append(key)
max_l.sort()
if len(max_l)>1:
    print(max_l[1])
else:
    print(max_l[0])
#범위
print(l[-1]-l[0])
